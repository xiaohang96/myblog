{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/images/iamge4.jpg","path":"images/iamge4.jpg","modified":0,"renderable":0},{"_id":"source/images/image.jpg","path":"images/image.jpg","modified":0,"renderable":0},{"_id":"source/images/userhead.jpg","path":"images/userhead.jpg","modified":0,"renderable":0},{"_id":"themes/yilia/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/yilia/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":0,"renderable":1},{"_id":"themes/yilia/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/yilia/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/yilia/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/yilia/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/yilia/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/coderwall.png","path":"img/coderwall.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/delicious.png","path":"img/delicious.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/douban.png","path":"img/douban.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/facebook.png","path":"img/facebook.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/github.png","path":"img/github.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/google.png","path":"img/google.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/img-err.png","path":"img/img-err.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/img-loading.png","path":"img/img-loading.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/linkedin.png","path":"img/linkedin.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/mail.png","path":"img/mail.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/pinboard.png","path":"img/pinboard.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/pinterest.png","path":"img/pinterest.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/rss.png","path":"img/rss.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/scrollbar_arrow.png","path":"img/scrollbar_arrow.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/stackoverflow.png","path":"img/stackoverflow.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/twitter.png","path":"img/twitter.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/weibo.png","path":"img/weibo.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/zhihu.png","path":"img/zhihu.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/js/instagram.js","path":"js/instagram.js","modified":0,"renderable":1},{"_id":"themes/yilia/source/js/jquery.lazyload.js","path":"js/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/yilia/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"themes/yilia/source/js/mobile.js","path":"js/mobile.js","modified":0,"renderable":1},{"_id":"themes/yilia/source/js/pc.js","path":"js/pc.js","modified":0,"renderable":1},{"_id":"themes/yilia/source/js/photo.js","path":"js/photo.js","modified":0,"renderable":1},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.svgz","path":"css/fonts/fontawesome-webfont.svgz","modified":0,"renderable":1},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/yilia/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":0,"renderable":1}],"Cache":[{"_id":"source/404.html","hash":"4de270bc164fc0abd99d292c0688a52e2dad1b79","modified":1470208948728},{"_id":"themes/yilia/.gitignore","hash":"0d5c2fdbdc974f10150baa12e1fc171a34960ed8","modified":1469514431338},{"_id":"themes/yilia/README.md","hash":"8648a81b3ae08a4accd6b0541533e662511e6400","modified":1469514431339},{"_id":"themes/yilia/_config.yml","hash":"a4abf0d1cb08c9baa6e00b8510c9028440dbf90d","modified":1470208039588},{"_id":"themes/yilia/package.json","hash":"0199dfb3d44cf520b67464817d13c44a7766b8d6","modified":1469514431400},{"_id":"source/_posts/first-day.md","hash":"0f8db907898bdd9fb6536881126e32d5c4392926","modified":1469517348870},{"_id":"source/_posts/hello-world.md","hash":"8a02477044e2b77f1b262da2c48c01429e4a32e4","modified":1469008199897},{"_id":"source/_posts/hexo-git-node-js详细教程.md","hash":"931cef2d9ba5ca7f08037cb2ac1f336dde257d9e","modified":1470209961499},{"_id":"source/_posts/增加相册.md","hash":"c083d20fc7da077ada2a2d0660a45808ea34a724","modified":1470210755416},{"_id":"source/images/iamge4.jpg","hash":"604e1f98bf6067a198c9cc075b0b30113d9b6ab4","modified":1469623968785},{"_id":"source/images/image.jpg","hash":"005bb04becc11f386e4c174a32110677bd6d7f6a","modified":1469453134464},{"_id":"source/images/userhead.jpg","hash":"cd1dfee528f1f24b37b776b9d4b895de11b7c306","modified":1399394727814},{"_id":"source/photos/data.json","hash":"53798739f59ce446d688e67bf4c4543f687a4ad2","modified":1469624081657},{"_id":"source/photos/index.md","hash":"6a89ce8cfdb6fcb802753c7c44a4f3f16f0f2d47","modified":1469613371513},{"_id":"themes/yilia/.git/FETCH_HEAD","hash":"0e51cf7c560e073e6ecc501023e32e783df28278","modified":1469514526053},{"_id":"themes/yilia/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1469514431269},{"_id":"themes/yilia/.git/ORIG_HEAD","hash":"154ba3f579c6295c558c47456b8023ff4f0cc214","modified":1469514526624},{"_id":"themes/yilia/.git/config","hash":"24300cece9d72967ea63724bdb2a8e3c2ac2cc52","modified":1469514431293},{"_id":"themes/yilia/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1469514251862},{"_id":"themes/yilia/.git/index","hash":"40437bca13c59f5ccd02833020f23bda04de71d7","modified":1469620409637},{"_id":"themes/yilia/.git/packed-refs","hash":"102a8556f68dca2b07b7ef5c523080d0dcbbe257","modified":1469514431263},{"_id":"themes/yilia/languages/de.yml","hash":"bc80f78f61c3d7af9652e6aa6fc3e4ff39b0c8d3","modified":1469514431340},{"_id":"themes/yilia/languages/default.yml","hash":"f0a7a032b31555c9ec05a711e1ac19bb07724708","modified":1469514431340},{"_id":"themes/yilia/languages/en.yml","hash":"a093e794aef63ec9e9e9ef490cf7e4474e45e59f","modified":1469514431341},{"_id":"themes/yilia/languages/fr-FR.yml","hash":"04b9a0d80d88d01e039e8077afe88f741e9620ba","modified":1469514431341},{"_id":"themes/yilia/languages/ru.yml","hash":"62f84ea82a696060c481fc22d4742e6201bb9bdc","modified":1469514431341},{"_id":"themes/yilia/languages/zh-Hans.yml","hash":"d2336578e14bb880d152266981c2b17523fc8742","modified":1469514431342},{"_id":"themes/yilia/languages/zh-hk.yml","hash":"e702fc43556e54c396917bdf7c869d528742e28b","modified":1469514431342},{"_id":"themes/yilia/languages/zh-tw.yml","hash":"005559baa96b7bb34e1efe6b031829a95d58d5e0","modified":1469514431343},{"_id":"themes/yilia/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1469514431352},{"_id":"themes/yilia/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1469514431352},{"_id":"themes/yilia/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1469514431392},{"_id":"themes/yilia/layout/layout.ejs","hash":"3a4350f23a1286345f76c949466c97a7200dae8e","modified":1469514431393},{"_id":"themes/yilia/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1469514431396},{"_id":"themes/yilia/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1469514431399},{"_id":"themes/yilia/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1469514431400},{"_id":"themes/yilia/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1469514251880},{"_id":"themes/yilia/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1469514251892},{"_id":"themes/yilia/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1469514251893},{"_id":"themes/yilia/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1469514251895},{"_id":"themes/yilia/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1469514251896},{"_id":"themes/yilia/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1469514251914},{"_id":"themes/yilia/.git/hooks/pre-rebase.sample","hash":"5885a56ab4fca8075a05a562d005e922cde9853b","modified":1469514251923},{"_id":"themes/yilia/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1469514251924},{"_id":"themes/yilia/.git/hooks/update.sample","hash":"39355a075977d05708ef74e1b66d09a36e486df1","modified":1469514251934},{"_id":"themes/yilia/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1469514251936},{"_id":"themes/yilia/.git/logs/HEAD","hash":"3b8a4ef0d089b1ca5aa2857e173f1a24b0b2924e","modified":1469514431284},{"_id":"themes/yilia/layout/_partial/after-footer.ejs","hash":"3709af4e8f7e1196dbd1f9dea62fa440d4b47836","modified":1469514431344},{"_id":"themes/yilia/layout/_partial/archive-post.ejs","hash":"5b29a383418cfdcf8d5c5719b4fc4608aaba6fe7","modified":1469514431344},{"_id":"themes/yilia/layout/_partial/archive.ejs","hash":"a4eacc2bc1278095a0ef99f904b0634c78f980eb","modified":1469514431344},{"_id":"themes/yilia/layout/_partial/article.ejs","hash":"420b94c78832456686ebd9831a5bfcb05365645a","modified":1469514431345},{"_id":"themes/yilia/layout/_partial/footer.ejs","hash":"871f81cacd5d41cb2eb001cd56254217a857dc2f","modified":1469514431346},{"_id":"themes/yilia/layout/_partial/google-analytics.ejs","hash":"1ccc627d7697e68fddc367c73ac09920457e5b35","modified":1469514431346},{"_id":"themes/yilia/layout/_partial/head.ejs","hash":"2bbf5aad03f54055d9d7852e70ff7e6952a41f26","modified":1469514431347},{"_id":"themes/yilia/layout/_partial/header.ejs","hash":"b69855e07b65117769adc515cb64b803932068c9","modified":1469514431347},{"_id":"themes/yilia/layout/_partial/left-col.ejs","hash":"b03e8424b4798d4887801afdfae457fbf6027838","modified":1469514431348},{"_id":"themes/yilia/layout/_partial/mathjax.ejs","hash":"7be03a92dabeb2f94bf0e731d12a1c1146d736dd","modified":1469514431348},{"_id":"themes/yilia/layout/_partial/mobile-nav.ejs","hash":"6a7a2a4960dabf9d7cd523573da7869eebf4b02d","modified":1469514431348},{"_id":"themes/yilia/source/css/.DS_Store","hash":"fc5a428fe40854a0ba66b4cea196c6700a57cae7","modified":1469514431403},{"_id":"themes/yilia/source/css/_extend.styl","hash":"8ab1ad313bd6707d248c5ca1ee9a5eab8d815e42","modified":1469514431403},{"_id":"themes/yilia/source/css/_variables.styl","hash":"8b63ea3c7199524b9a1541075c6f8fb2c0d0ea3d","modified":1469514431422},{"_id":"themes/yilia/source/css/style.styl","hash":"456e8cfe3b0b0371e81848ea9b0bc7ffd5360921","modified":1469514431427},{"_id":"themes/yilia/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1469514431428},{"_id":"themes/yilia/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1469514431428},{"_id":"themes/yilia/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1469514431429},{"_id":"themes/yilia/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1469514431429},{"_id":"themes/yilia/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1469514431430},{"_id":"themes/yilia/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1469514431430},{"_id":"themes/yilia/source/fancybox/jquery.fancybox.css","hash":"96138eaddfbd305160ddcb98a5f08555ca6cb4ee","modified":1469514431434},{"_id":"themes/yilia/source/fancybox/jquery.fancybox.js","hash":"004bb0812414554ab48067792f09e978603253b6","modified":1469514431434},{"_id":"themes/yilia/source/fancybox/jquery.fancybox.pack.js","hash":"2da892a02778236b64076e5e8802ef0566e1d9e8","modified":1469514431435},{"_id":"themes/yilia/source/img/coderwall.png","hash":"fa84676c4d654e040e51fd34bfcd9f9348cd5331","modified":1469514431436},{"_id":"themes/yilia/source/img/delicious.png","hash":"9553a5f5189e4a953e04a58a49dbfa74b86b73dd","modified":1469514431436},{"_id":"themes/yilia/source/img/douban.png","hash":"e2ade003ffadd5826ee66ec23901c2d6e8607e4e","modified":1469514431436},{"_id":"themes/yilia/source/img/facebook.png","hash":"d19ad7a0903daf26817afd8753cd97e0cc714f54","modified":1469514431437},{"_id":"themes/yilia/source/img/github.png","hash":"b84d03b32fa388dcbf149296ebd16dce6223d48d","modified":1469514431437},{"_id":"themes/yilia/source/img/google.png","hash":"61a21fec7346fa3400b747ac9a201cf3d5bc013d","modified":1469514431438},{"_id":"themes/yilia/source/img/img-err.png","hash":"23a63ea26eb3c1d5e677d9883cf36cc1a1a1228b","modified":1469514431438},{"_id":"themes/yilia/source/img/img-loading.png","hash":"a9cd5cd11866824f31e3d1c5e23badfeb3f73031","modified":1469514431438},{"_id":"themes/yilia/source/img/linkedin.png","hash":"e203138fb53c257cb214e97f4e30091b9c568d2c","modified":1469514431439},{"_id":"themes/yilia/source/img/mail.png","hash":"fca8199cc77fdbd700a45bf56d091c82f4a67fe7","modified":1469514431440},{"_id":"themes/yilia/source/img/pinboard.png","hash":"0891fbb6d092fa012bf936019923383d84c6aeb0","modified":1469514431440},{"_id":"themes/yilia/source/img/pinterest.png","hash":"9c72917f8779c083157c6ce7a5d62ed4874f0630","modified":1469514431440},{"_id":"themes/yilia/source/img/rss.png","hash":"430fd47340e75214c081abd05cd7410cf7c71b86","modified":1469514431441},{"_id":"themes/yilia/source/img/scrollbar_arrow.png","hash":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0","modified":1469514431441},{"_id":"themes/yilia/source/img/stackoverflow.png","hash":"da5dfe9043055c95e479d49c78cd3b020de608f2","modified":1469514431441},{"_id":"themes/yilia/source/img/twitter.png","hash":"14dbb8e62d056525253bc0de13acd1723da7a934","modified":1469514431442},{"_id":"themes/yilia/source/img/weibo.png","hash":"280dae3fd38086158b4a1b57edb94c06b1a5014b","modified":1469514431442},{"_id":"themes/yilia/source/img/zhihu.png","hash":"a6d6ef65e9ac82e613a311810391ebb90d9b1c1d","modified":1469514431443},{"_id":"themes/yilia/source/js/instagram.js","hash":"81e13cacf4947118ed1920e59b04ccf6beef6b86","modified":1469514431443},{"_id":"themes/yilia/source/js/jquery.lazyload.js","hash":"9c34c37b4dca82386648d364da913153d1db902e","modified":1469514431444},{"_id":"themes/yilia/source/js/main.js","hash":"cc323b8554b5f8d6e24c3291be324d65d12762c9","modified":1469611891296},{"_id":"themes/yilia/source/js/mobile.js","hash":"387c047e661f04fbb5f5bfc4b2db617023e836ce","modified":1469514431445},{"_id":"themes/yilia/source/js/pc.js","hash":"a5397d34a04084ee089b4b1e26457ab46ecea63e","modified":1469514431445},{"_id":"themes/yilia/source/js/photo.js","hash":"7f95d4ef9f709344ddad545cc280450215732ee8","modified":1469694269416},{"_id":"themes/yilia/.git/objects/pack/pack-c0ce3a82683b3280631ef55cfbf569830b474762.idx","hash":"32a28ea1a7096e5f79da1255f289fb94cb85831d","modified":1469514430886},{"_id":"themes/yilia/.git/refs/heads/master","hash":"154ba3f579c6295c558c47456b8023ff4f0cc214","modified":1469514431283},{"_id":"themes/yilia/layout/_partial/post/category.ejs","hash":"27fab3e6ccc41c075dc4c5ba3ca9e7f3b6247945","modified":1469514431349},{"_id":"themes/yilia/layout/_partial/post/date.ejs","hash":"06d8914b5aef73b5ec2cabb0105e275ff821b321","modified":1469514431349},{"_id":"themes/yilia/layout/_partial/post/nav.ejs","hash":"c115c282eebfb6b18612d2d8733272c270b03066","modified":1469514431350},{"_id":"themes/yilia/layout/_partial/post/duoshuo.ejs","hash":"f6b4c4eaafb5ac386273354b5f64a26139b7a3b0","modified":1469514431349},{"_id":"themes/yilia/layout/_partial/post/share_addthis.ejs","hash":"4ab6cab2a975a4df8419448b33dec4724279d85c","modified":1469514431350},{"_id":"themes/yilia/layout/_partial/post/share_jia.ejs","hash":"d50294bf9858e7942208c380e851a37ed37f1d6f","modified":1469514431350},{"_id":"themes/yilia/layout/_partial/post/tag.ejs","hash":"acf1b9d79ccec172881f9f0080e96667f4178885","modified":1469514431351},{"_id":"themes/yilia/layout/_partial/post/title.ejs","hash":"d4a460a35e2112d0c7414fd5e19b3a16093f1caf","modified":1469514431351},{"_id":"themes/yilia/source/css/_partial/article.styl","hash":"872fc4e63509fef885c939e5fd70e6ed439beced","modified":1469514431406},{"_id":"themes/yilia/source/css/_partial/archive.styl","hash":"8b349f1605024dcdae054e04f02d71a2e84957c2","modified":1469514431405},{"_id":"themes/yilia/source/css/_partial/header.styl","hash":"67e59feb18eee6026717cb440d86ab9551782628","modified":1469514431408},{"_id":"themes/yilia/source/css/_partial/footer.styl","hash":"7ca837a4cc34db1c35f01baec85eb10ccc64ea86","modified":1469514431407},{"_id":"themes/yilia/source/css/_partial/highlight.styl","hash":"08d3205dde3235f3e6881126268e6c473f46a8ac","modified":1469514431409},{"_id":"themes/yilia/source/css/_partial/instagram.styl","hash":"8a7b07bf5ea2d3588c0019f722c245bb1a8696af","modified":1469514431410},{"_id":"themes/yilia/source/css/_partial/main.styl","hash":"c368f1533053d4cffdf0ad982603271400b08e33","modified":1469514431411},{"_id":"themes/yilia/source/css/_partial/mobile-slider.styl","hash":"e19c7fae6968ad3ea6cfc110900a991f9b5fce31","modified":1469514431413},{"_id":"themes/yilia/source/css/_partial/page.styl","hash":"720b5b169bc28ccba3794efce9b7cd39f243dec7","modified":1469514431415},{"_id":"themes/yilia/source/css/_partial/mobile.styl","hash":"3a03b04ef8ac305aa5dbf7b9db99cd9377d07383","modified":1469514431414},{"_id":"themes/yilia/source/css/_partial/scroll.styl","hash":"5539a38f9acd603d453a0ea0d8ce10893cf83d22","modified":1469514431416},{"_id":"themes/yilia/source/css/_partial/share.styl","hash":"22697b9a9877ab9f018364feb57aeea4a8313c9a","modified":1469514431417},{"_id":"themes/yilia/source/css/_partial/tagcloud.styl","hash":"af0115de5c6455f899a2e09225b50224982c039d","modified":1469514431418},{"_id":"themes/yilia/source/css/_partial/wheelmenu.styl","hash":"9e57421eab562ea13d0ed2b2e1415eee79fa23d0","modified":1469514431419},{"_id":"themes/yilia/source/css/_util/grid.styl","hash":"1aa883ab432d9e4139c89dcbd40ae2bd1528d029","modified":1469514431420},{"_id":"themes/yilia/source/css/_util/mixin.styl","hash":"429bad87fc156eacf226c5e35b0eafc277f2504b","modified":1469514431421},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.eot","hash":"3ce87b82c7a4ffdf65e96765c2ffda10b1a283c6","modified":1469514431423},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.svgz","hash":"4bfdd33ed702e32ae01399fcc2652377f78e7626","modified":1469514431425},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.ttf","hash":"1480b8101b02da9bc4c60341b5e185e63e585064","modified":1469514431426},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.woff","hash":"cafc4ac5761a0a252d33dce4ea3952cf9a38d832","modified":1469514431427},{"_id":"themes/yilia/source/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1469514431431},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-buttons.css","hash":"6394c48092085788a8c0ef72670b0652006231a1","modified":1469514431431},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-buttons.js","hash":"4c9c395d705d22af7da06870d18f434e2a2eeaf9","modified":1469514431432},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-media.js","hash":"e14c32cc6823b81b2f758512f13ed8eb9ef2b454","modified":1469514431432},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"b88b589f5f1aa1b3d87cc7eef34c281ff749b1ae","modified":1469514431433},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"83cdfea43632b613771691a11f56f99d85fb6dbd","modified":1469514431433},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.svg","hash":"ba13657479b46daecb6336bfe376f84cef3ae58b","modified":1469514431424},{"_id":"themes/yilia/.git/logs/refs/heads/master","hash":"3b8a4ef0d089b1ca5aa2857e173f1a24b0b2924e","modified":1469514431284},{"_id":"themes/yilia/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1469514431264},{"_id":"themes/yilia/.git/logs/refs/remotes/origin/HEAD","hash":"3b8a4ef0d089b1ca5aa2857e173f1a24b0b2924e","modified":1469514431268},{"_id":"themes/yilia/.git/objects/pack/pack-c0ce3a82683b3280631ef55cfbf569830b474762.pack","hash":"3a584895c714da5326b0b6acd2273164cc58c8c0","modified":1469514430963},{"_id":"public/photos/data.json","hash":"8d28d5bfedcaae158075ca4e6eb7b41ae98d0efd","modified":1470210376247},{"_id":"public/404.html","hash":"42fe1970c2f406f261d501b777f9e2006dbc7d7b","modified":1470210761346},{"_id":"public/photos/index.html","hash":"bee66fd86914201136259e3c62c79cf9d502a76e","modified":1470210761347},{"_id":"public/2016/07/25/hexo-git-node-js详细教程/index.html","hash":"3be17a09ecbece4caab0252d088132a42da4fec2","modified":1470210761348},{"_id":"public/2016/07/25/first-day/index.html","hash":"949301fd2a6a9f0a3c0d94d29d0ee970d1e7227f","modified":1470210761348},{"_id":"public/2016/07/20/hello-world/index.html","hash":"199372cfedec0aaebbf4cfbbc6d5c7a7a95fd42f","modified":1470210761349},{"_id":"public/archives/index.html","hash":"e1dcf9ebdf6d848966f3206ae7175297c3d4501f","modified":1470210761349},{"_id":"public/archives/2016/index.html","hash":"b47df95952dcc7de83044cbd1bc9cfdd1e69beaa","modified":1470210761349},{"_id":"public/archives/2016/07/index.html","hash":"56da40bc48883cf250a7d9661011a020a27662eb","modified":1470210761349},{"_id":"public/tags/日记/index.html","hash":"44635b4ae8d6e2bbd1a079e53bc657f57a658cef","modified":1470210761349},{"_id":"public/tags/教程/index.html","hash":"a13fc9a01fbfb0ddbe127560b917c63817d052e9","modified":1470210761350},{"_id":"public/index.html","hash":"2f53eea554a0130c6fb3ae0d1107356f6c55ddfc","modified":1470210761350},{"_id":"public/archives/2016/08/index.html","hash":"8dde8b0f00e6d194ae4380a811d1dcaddc23e569","modified":1470210761349},{"_id":"public/2016/08/03/增加相册/index.html","hash":"f45315d2cde2341f7b228987cf6c1c7718e23b6a","modified":1470210761350},{"_id":"public/images/iamge4.jpg","hash":"604e1f98bf6067a198c9cc075b0b30113d9b6ab4","modified":1470210376401},{"_id":"public/images/userhead.jpg","hash":"cd1dfee528f1f24b37b776b9d4b895de11b7c306","modified":1470210376401},{"_id":"public/images/image.jpg","hash":"005bb04becc11f386e4c174a32110677bd6d7f6a","modified":1470210376401},{"_id":"public/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1470210376402},{"_id":"public/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1470210376403},{"_id":"public/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1470210376403},{"_id":"public/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1470210376403},{"_id":"public/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1470210376403},{"_id":"public/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1470210376404},{"_id":"public/img/coderwall.png","hash":"fa84676c4d654e040e51fd34bfcd9f9348cd5331","modified":1470210376404},{"_id":"public/img/delicious.png","hash":"9553a5f5189e4a953e04a58a49dbfa74b86b73dd","modified":1470210376404},{"_id":"public/img/douban.png","hash":"e2ade003ffadd5826ee66ec23901c2d6e8607e4e","modified":1470210376404},{"_id":"public/img/facebook.png","hash":"d19ad7a0903daf26817afd8753cd97e0cc714f54","modified":1470210376404},{"_id":"public/img/github.png","hash":"b84d03b32fa388dcbf149296ebd16dce6223d48d","modified":1470210376404},{"_id":"public/img/google.png","hash":"61a21fec7346fa3400b747ac9a201cf3d5bc013d","modified":1470210376404},{"_id":"public/img/img-err.png","hash":"23a63ea26eb3c1d5e677d9883cf36cc1a1a1228b","modified":1470210376404},{"_id":"public/img/img-loading.png","hash":"a9cd5cd11866824f31e3d1c5e23badfeb3f73031","modified":1470210376404},{"_id":"public/img/linkedin.png","hash":"e203138fb53c257cb214e97f4e30091b9c568d2c","modified":1470210376404},{"_id":"public/img/mail.png","hash":"fca8199cc77fdbd700a45bf56d091c82f4a67fe7","modified":1470210376404},{"_id":"public/img/pinboard.png","hash":"0891fbb6d092fa012bf936019923383d84c6aeb0","modified":1470210376404},{"_id":"public/img/pinterest.png","hash":"9c72917f8779c083157c6ce7a5d62ed4874f0630","modified":1470210376405},{"_id":"public/img/rss.png","hash":"430fd47340e75214c081abd05cd7410cf7c71b86","modified":1470210376405},{"_id":"public/img/scrollbar_arrow.png","hash":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0","modified":1470210376405},{"_id":"public/img/stackoverflow.png","hash":"da5dfe9043055c95e479d49c78cd3b020de608f2","modified":1470210376405},{"_id":"public/img/twitter.png","hash":"14dbb8e62d056525253bc0de13acd1723da7a934","modified":1470210376405},{"_id":"public/img/weibo.png","hash":"280dae3fd38086158b4a1b57edb94c06b1a5014b","modified":1470210376405},{"_id":"public/img/zhihu.png","hash":"a6d6ef65e9ac82e613a311810391ebb90d9b1c1d","modified":1470210376405},{"_id":"public/css/fonts/fontawesome-webfont.eot","hash":"3ce87b82c7a4ffdf65e96765c2ffda10b1a283c6","modified":1470210376405},{"_id":"public/css/fonts/fontawesome-webfont.svgz","hash":"4bfdd33ed702e32ae01399fcc2652377f78e7626","modified":1470210376405},{"_id":"public/css/fonts/fontawesome-webfont.ttf","hash":"1480b8101b02da9bc4c60341b5e185e63e585064","modified":1470210376405},{"_id":"public/css/fonts/fontawesome-webfont.woff","hash":"cafc4ac5761a0a252d33dce4ea3952cf9a38d832","modified":1470210376405},{"_id":"public/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1470210376405},{"_id":"public/css/fonts/fontawesome-webfont.svg","hash":"ba13657479b46daecb6336bfe376f84cef3ae58b","modified":1470210377704},{"_id":"public/fancybox/jquery.fancybox.css","hash":"b6aa6692c2e5f8bd74d96827b78570f0c5683c20","modified":1470210377727},{"_id":"public/js/instagram.js","hash":"f19adbcc0dac33536bc6660598059048ec901882","modified":1470210377727},{"_id":"public/js/main.js","hash":"16d9848e0fa704fae5642b0316c622ae67a432e5","modified":1470210377727},{"_id":"public/js/jquery.lazyload.js","hash":"c11a2e7b330d16d06feabd0a8477099adf9d6799","modified":1470210377727},{"_id":"public/js/mobile.js","hash":"b68cc01d24e80973c48205f551da87f3f3427644","modified":1470210377727},{"_id":"public/js/pc.js","hash":"fdbc039fc9ffa70815b5fc4daaa587ae29693f10","modified":1470210377728},{"_id":"public/js/photo.js","hash":"51837537d811d593af83f4bf7c91887aa9cfac48","modified":1470210377728},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1470210377728},{"_id":"public/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1470210377728},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1470210377728},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1470210377728},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1470210377729},{"_id":"public/css/style.css","hash":"10e9b93cf935a165020e48334a40b84b0f895401","modified":1470210377729},{"_id":"public/fancybox/jquery.fancybox.js","hash":"a82597493d75ea989ca586e09173cff332efe41e","modified":1470210377729},{"_id":"public/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1470210377729}],"Category":[],"Data":[],"Page":[{"_content":"<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"/>\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n  <meta name=\"robots\" content=\"all\" />\n  <meta name=\"robots\" content=\"index,follow\"/>\n</head>\n<body>\n\n<script type=\"text/javascript\" src=\"http://www.qq.com/404/search_children.js\"\n        charset=\"utf-8\" homePageUrl=\"your site url \"\n        homePageName=\"回到我的主页\">\n</script>\n\n</body>\n</html>","source":"404.html","raw":"<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"/>\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n  <meta name=\"robots\" content=\"all\" />\n  <meta name=\"robots\" content=\"index,follow\"/>\n</head>\n<body>\n\n<script type=\"text/javascript\" src=\"http://www.qq.com/404/search_children.js\"\n        charset=\"utf-8\" homePageUrl=\"your site url \"\n        homePageName=\"回到我的主页\">\n</script>\n\n</body>\n</html>","date":"2016-08-03T07:22:28.830Z","updated":"2016-08-03T07:22:28.728Z","path":"404.html","title":"","comments":1,"layout":"page","_id":"cirelaq5q0000lgu6qyzqieyp","content":"<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n  <meta name=\"robots\" content=\"all\">\n  <meta name=\"robots\" content=\"index,follow\">\n</head>\n<body>\n\n<script type=\"text/javascript\" src=\"http://www.qq.com/404/search_children.js\" charset=\"utf-8\" homepageurl=\"your site url \" homepagename=\"回到我的主页\">\n</script>\n\n</body>\n</html>","excerpt":"","more":"<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"/>\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n  <meta name=\"robots\" content=\"all\" />\n  <meta name=\"robots\" content=\"index,follow\"/>\n</head>\n<body>\n\n<script type=\"text/javascript\" src=\"http://www.qq.com/404/search_children.js\"\n        charset=\"utf-8\" homePageUrl=\"your site url \"\n        homePageName=\"回到我的主页\">\n</script>\n\n</body>\n</html>"},{"_content":"[\n\t\"iamge4.jpg\",\n\t\"iamge5.jpg\",\n\t\"iamge6.jpg\",\n\t\"iamge7.jpg\",\n\t\"iamge8.jpg\",\n\t\"image1.jpg\",\n\t\"image2.jpg\",\n\t\"image3.jpg\"\n]","source":"photos/data.json","raw":"[\n\t\"iamge4.jpg\",\n\t\"iamge5.jpg\",\n\t\"iamge6.jpg\",\n\t\"iamge7.jpg\",\n\t\"iamge8.jpg\",\n\t\"image1.jpg\",\n\t\"image2.jpg\",\n\t\"image3.jpg\"\n]","date":"2016-07-27T12:54:41.657Z","updated":"2016-07-27T12:54:41.657Z","path":"photos/data.json","layout":"false","title":"","comments":1,"_id":"cirelaq7o0002lgu6n2q53p62","content":"[\"iamge4.jpg\",\"iamge5.jpg\",\"iamge6.jpg\",\"iamge7.jpg\",\"iamge8.jpg\",\"image1.jpg\",\"image2.jpg\",\"image3.jpg\"]","excerpt":"","more":"[\"iamge4.jpg\",\"iamge5.jpg\",\"iamge6.jpg\",\"iamge7.jpg\",\"iamge8.jpg\",\"image1.jpg\",\"image2.jpg\",\"image3.jpg\"]"},{"_content":"<link type=\"text/css\" href=\"/fancybox/jquery.fancybox.css\" rel=\"stylesheet\">\n<div class=\"instagram\">\n    <section class=\"archives album\">\n        <ul class=\"img-box-ul\"></ul>\n    </section>\n</div>","source":"photos/index.md","raw":"<link type=\"text/css\" href=\"/fancybox/jquery.fancybox.css\" rel=\"stylesheet\">\n<div class=\"instagram\">\n    <section class=\"archives album\">\n        <ul class=\"img-box-ul\"></ul>\n    </section>\n</div>","date":"2016-07-27T09:56:11.513Z","updated":"2016-07-27T09:56:11.513Z","path":"photos/index.html","title":"","comments":1,"layout":"page","_id":"cirelaq7t0004lgu62bom0y11","content":"<p><link type=\"text/css\" href=\"/fancybox/jquery.fancybox.css\" rel=\"stylesheet\"></p>\n<div class=\"instagram\"><br>    <section class=\"archives album\"><br>        <ul class=\"img-box-ul\"></ul><br>    </section><br></div>","excerpt":"","more":"<p><link type=\"text/css\" href=\"/fancybox/jquery.fancybox.css\" rel=\"stylesheet\"></p>\n<div class=\"instagram\"><br>    <section class=\"archives album\"><br>        <ul class=\"img-box-ul\"></ul><br>    </section><br></div>"}],"Post":[{"title":"first-day","date":"2016-07-25T10:44:12.000Z","_content":"这是**新的开始**，我用hexo创建了第一篇文章。\n感觉非常好。","source":"_posts/first-day.md","raw":"\n---\ntitle: first-day\ndate: 2016-7-25 18:44:12\ntags:\n 日记\n---\n这是**新的开始**，我用hexo创建了第一篇文章。\n感觉非常好。","slug":"first-day","published":1,"updated":"2016-07-26T07:15:48.870Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirelaq7g0001lgu66z5y433y","content":"<p>这是<strong>新的开始</strong>，我用hexo创建了第一篇文章。<br>感觉非常好。</p>\n","excerpt":"","more":"<p>这是<strong>新的开始</strong>，我用hexo创建了第一篇文章。<br>感觉非常好。</p>\n"},{"title":"hexo+git+node.js详细教程","date":"2016-07-25T13:22:40.000Z","_content":"这里默认安装了git+github；\n#### 安装Hexo\n\n\t\t\t\t$ cd d:/hexo\n\t\t\t\t$ npm install hexo-cli -g\n\t\t\t\t$ hexo init blog\n\t\t\t\t$ cd blog\n\t\t\t\t$ npm install\n\t\t\t\t$ hexo g # 或者hexo generate\n\t\t\t\t$ hexo s # 或者hexo server，可以在http://localhost:4000访问\n\n\n这里有必要提下Hexo常用的几个命令：\nhexo generate (hexo g) 生成静态文件，会在当前目录下生成一个新的叫做public的文件夹\nhexo server (hexo s) 启动本地web服务，用于博客的预览\nhexo deploy (hexo d) 部署播客到远端（比如github, heroku等平台）\n另外还有其他几个常用命令：\n\n$ hexo new \"postName\" #新建文章\n$ hexo new page \"pageName\" #新建页面\n常用简写\n\n$ hexo n == hexo new\n$ hexo g == hexo generate\n$ hexo s == hexo server\n$ hexo d == hexo deploy\n常用组合\n\n$ hexo d -g #生成部署\n$ hexo s -g #生成预览\n现在我们打开http://localhost:4000/ 已经可以看到一篇内置的blog了。\n![这是一张图片](/images/image.jpg)\n\n### Github Pages设置\n推荐教程：\nhttps://pages.github.com/\n在这里我创建了一个github repo叫做 xiaohang96.github.io. 创建完成之后，需要有一次提交(git commit)操作，然后就可以通过链接http://xiaohang96.github.io/ 访问了。\n\n### 部署Hexo到Github Pages\n\n使用git命令行部署\n不幸的是，上述命令虽然简单方便，但是偶尔会有莫名其妙的问题出现，因此，我们也可以追本溯源，使用git命令来完成部署的工作。\n\n#### clone github repo\n\n\t\t\t\t$git init\n\t\t\t\t$ cd d:/hexo/blog\n\t\t\t\t$ git clone https://github.com/xiaohang96/xiaohang96.github.io.git .deploy/xiaohang96.github.io\n\n将我们之前创建的repo克隆到本地，新建一个目录叫做.deploy用于存放克隆的代码。\n创建一个deploy脚本文件\n\n\t\t\t\thexo generate\n\t\t\t\tcp -R public/* .deploy/jiji262.github.io\n\t\t\t\tcd .deploy/jiji262.github.io\n\t\t\t\tgit add .\n\t\t\t\tgit commit -m “update”\n\t\t\t\tgit push origin master\n\n简单解释一下，hexo generate生成public文件夹下的新内容，然后将其拷贝至github.io的git目录下，然后使用git commit命令提交代码到github.io这个repo的master branch上。\n\n需要部署的时候，执行这段脚本就可以了（比如可以将其保存为deploy.sh）。\n命令行输入： sh deploy.sh\n执行过程中可能需要让你输入Github账户的用户名及密码，按照提示操作即可\n\n\n","source":"_posts/hexo-git-node-js详细教程.md","raw":"---\ntitle: hexo+git+node.js详细教程\ndate: 2016-07-25 21:22:40\ntags:\n 教程\n---\n这里默认安装了git+github；\n#### 安装Hexo\n\n\t\t\t\t$ cd d:/hexo\n\t\t\t\t$ npm install hexo-cli -g\n\t\t\t\t$ hexo init blog\n\t\t\t\t$ cd blog\n\t\t\t\t$ npm install\n\t\t\t\t$ hexo g # 或者hexo generate\n\t\t\t\t$ hexo s # 或者hexo server，可以在http://localhost:4000访问\n\n\n这里有必要提下Hexo常用的几个命令：\nhexo generate (hexo g) 生成静态文件，会在当前目录下生成一个新的叫做public的文件夹\nhexo server (hexo s) 启动本地web服务，用于博客的预览\nhexo deploy (hexo d) 部署播客到远端（比如github, heroku等平台）\n另外还有其他几个常用命令：\n\n$ hexo new \"postName\" #新建文章\n$ hexo new page \"pageName\" #新建页面\n常用简写\n\n$ hexo n == hexo new\n$ hexo g == hexo generate\n$ hexo s == hexo server\n$ hexo d == hexo deploy\n常用组合\n\n$ hexo d -g #生成部署\n$ hexo s -g #生成预览\n现在我们打开http://localhost:4000/ 已经可以看到一篇内置的blog了。\n![这是一张图片](/images/image.jpg)\n\n### Github Pages设置\n推荐教程：\nhttps://pages.github.com/\n在这里我创建了一个github repo叫做 xiaohang96.github.io. 创建完成之后，需要有一次提交(git commit)操作，然后就可以通过链接http://xiaohang96.github.io/ 访问了。\n\n### 部署Hexo到Github Pages\n\n使用git命令行部署\n不幸的是，上述命令虽然简单方便，但是偶尔会有莫名其妙的问题出现，因此，我们也可以追本溯源，使用git命令来完成部署的工作。\n\n#### clone github repo\n\n\t\t\t\t$git init\n\t\t\t\t$ cd d:/hexo/blog\n\t\t\t\t$ git clone https://github.com/xiaohang96/xiaohang96.github.io.git .deploy/xiaohang96.github.io\n\n将我们之前创建的repo克隆到本地，新建一个目录叫做.deploy用于存放克隆的代码。\n创建一个deploy脚本文件\n\n\t\t\t\thexo generate\n\t\t\t\tcp -R public/* .deploy/jiji262.github.io\n\t\t\t\tcd .deploy/jiji262.github.io\n\t\t\t\tgit add .\n\t\t\t\tgit commit -m “update”\n\t\t\t\tgit push origin master\n\n简单解释一下，hexo generate生成public文件夹下的新内容，然后将其拷贝至github.io的git目录下，然后使用git commit命令提交代码到github.io这个repo的master branch上。\n\n需要部署的时候，执行这段脚本就可以了（比如可以将其保存为deploy.sh）。\n命令行输入： sh deploy.sh\n执行过程中可能需要让你输入Github账户的用户名及密码，按照提示操作即可\n\n\n","slug":"hexo-git-node-js详细教程","published":1,"updated":"2016-08-03T07:39:21.499Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirelaq7q0003lgu6t28g1dvp","content":"<p>这里默认安装了git+github；</p>\n<h4 id=\"安装Hexo\"><a href=\"#安装Hexo\" class=\"headerlink\" title=\"安装Hexo\"></a>安装Hexo</h4><pre><code>$ cd d:/hexo\n$ npm install hexo-cli -g\n$ hexo init blog\n$ cd blog\n$ npm install\n$ hexo g # 或者hexo generate\n$ hexo s # 或者hexo server，可以在http://localhost:4000访问\n</code></pre><p>这里有必要提下Hexo常用的几个命令：<br>hexo generate (hexo g) 生成静态文件，会在当前目录下生成一个新的叫做public的文件夹<br>hexo server (hexo s) 启动本地web服务，用于博客的预览<br>hexo deploy (hexo d) 部署播客到远端（比如github, heroku等平台）<br>另外还有其他几个常用命令：</p>\n<p>$ hexo new “postName” #新建文章<br>$ hexo new page “pageName” #新建页面<br>常用简写</p>\n<p>$ hexo n == hexo new<br>$ hexo g == hexo generate<br>$ hexo s == hexo server<br>$ hexo d == hexo deploy<br>常用组合</p>\n<p>$ hexo d -g #生成部署<br>$ hexo s -g #生成预览<br>现在我们打开<a href=\"http://localhost:4000/\" target=\"_blank\" rel=\"external\">http://localhost:4000/</a> 已经可以看到一篇内置的blog了。<br><img src=\"/images/image.jpg\" alt=\"这是一张图片\"></p>\n<h3 id=\"Github-Pages设置\"><a href=\"#Github-Pages设置\" class=\"headerlink\" title=\"Github Pages设置\"></a>Github Pages设置</h3><p>推荐教程：<br><a href=\"https://pages.github.com/\" target=\"_blank\" rel=\"external\">https://pages.github.com/</a><br>在这里我创建了一个github repo叫做 xiaohang96.github.io. 创建完成之后，需要有一次提交(git commit)操作，然后就可以通过链接<a href=\"http://xiaohang96.github.io/\" target=\"_blank\" rel=\"external\">http://xiaohang96.github.io/</a> 访问了。</p>\n<h3 id=\"部署Hexo到Github-Pages\"><a href=\"#部署Hexo到Github-Pages\" class=\"headerlink\" title=\"部署Hexo到Github Pages\"></a>部署Hexo到Github Pages</h3><p>使用git命令行部署<br>不幸的是，上述命令虽然简单方便，但是偶尔会有莫名其妙的问题出现，因此，我们也可以追本溯源，使用git命令来完成部署的工作。</p>\n<h4 id=\"clone-github-repo\"><a href=\"#clone-github-repo\" class=\"headerlink\" title=\"clone github repo\"></a>clone github repo</h4><pre><code>$git init\n$ cd d:/hexo/blog\n$ git clone https://github.com/xiaohang96/xiaohang96.github.io.git .deploy/xiaohang96.github.io\n</code></pre><p>将我们之前创建的repo克隆到本地，新建一个目录叫做.deploy用于存放克隆的代码。<br>创建一个deploy脚本文件</p>\n<pre><code>hexo generate\ncp -R public/* .deploy/jiji262.github.io\ncd .deploy/jiji262.github.io\ngit add .\ngit commit -m “update”\ngit push origin master\n</code></pre><p>简单解释一下，hexo generate生成public文件夹下的新内容，然后将其拷贝至github.io的git目录下，然后使用git commit命令提交代码到github.io这个repo的master branch上。</p>\n<p>需要部署的时候，执行这段脚本就可以了（比如可以将其保存为deploy.sh）。<br>命令行输入： sh deploy.sh<br>执行过程中可能需要让你输入Github账户的用户名及密码，按照提示操作即可</p>\n","excerpt":"","more":"<p>这里默认安装了git+github；</p>\n<h4 id=\"安装Hexo\"><a href=\"#安装Hexo\" class=\"headerlink\" title=\"安装Hexo\"></a>安装Hexo</h4><pre><code>$ cd d:/hexo\n$ npm install hexo-cli -g\n$ hexo init blog\n$ cd blog\n$ npm install\n$ hexo g # 或者hexo generate\n$ hexo s # 或者hexo server，可以在http://localhost:4000访问\n</code></pre><p>这里有必要提下Hexo常用的几个命令：<br>hexo generate (hexo g) 生成静态文件，会在当前目录下生成一个新的叫做public的文件夹<br>hexo server (hexo s) 启动本地web服务，用于博客的预览<br>hexo deploy (hexo d) 部署播客到远端（比如github, heroku等平台）<br>另外还有其他几个常用命令：</p>\n<p>$ hexo new “postName” #新建文章<br>$ hexo new page “pageName” #新建页面<br>常用简写</p>\n<p>$ hexo n == hexo new<br>$ hexo g == hexo generate<br>$ hexo s == hexo server<br>$ hexo d == hexo deploy<br>常用组合</p>\n<p>$ hexo d -g #生成部署<br>$ hexo s -g #生成预览<br>现在我们打开<a href=\"http://localhost:4000/\">http://localhost:4000/</a> 已经可以看到一篇内置的blog了。<br><img src=\"/images/image.jpg\" alt=\"这是一张图片\"></p>\n<h3 id=\"Github-Pages设置\"><a href=\"#Github-Pages设置\" class=\"headerlink\" title=\"Github Pages设置\"></a>Github Pages设置</h3><p>推荐教程：<br><a href=\"https://pages.github.com/\">https://pages.github.com/</a><br>在这里我创建了一个github repo叫做 xiaohang96.github.io. 创建完成之后，需要有一次提交(git commit)操作，然后就可以通过链接<a href=\"http://xiaohang96.github.io/\">http://xiaohang96.github.io/</a> 访问了。</p>\n<h3 id=\"部署Hexo到Github-Pages\"><a href=\"#部署Hexo到Github-Pages\" class=\"headerlink\" title=\"部署Hexo到Github Pages\"></a>部署Hexo到Github Pages</h3><p>使用git命令行部署<br>不幸的是，上述命令虽然简单方便，但是偶尔会有莫名其妙的问题出现，因此，我们也可以追本溯源，使用git命令来完成部署的工作。</p>\n<h4 id=\"clone-github-repo\"><a href=\"#clone-github-repo\" class=\"headerlink\" title=\"clone github repo\"></a>clone github repo</h4><pre><code>$git init\n$ cd d:/hexo/blog\n$ git clone https://github.com/xiaohang96/xiaohang96.github.io.git .deploy/xiaohang96.github.io\n</code></pre><p>将我们之前创建的repo克隆到本地，新建一个目录叫做.deploy用于存放克隆的代码。<br>创建一个deploy脚本文件</p>\n<pre><code>hexo generate\ncp -R public/* .deploy/jiji262.github.io\ncd .deploy/jiji262.github.io\ngit add .\ngit commit -m “update”\ngit push origin master\n</code></pre><p>简单解释一下，hexo generate生成public文件夹下的新内容，然后将其拷贝至github.io的git目录下，然后使用git commit命令提交代码到github.io这个repo的master branch上。</p>\n<p>需要部署的时候，执行这段脚本就可以了（比如可以将其保存为deploy.sh）。<br>命令行输入： sh deploy.sh<br>执行过程中可能需要让你输入Github账户的用户名及密码，按照提示操作即可</p>\n"},{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","slug":"hello-world","published":1,"date":"2016-07-20T09:04:40.580Z","updated":"2016-07-20T09:49:59.897Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cirelaq7z0006lgu6z5ioxafx","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"external\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"external\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"external\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"external\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"external\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"external\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo generate</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"external\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"external\">Deployment</a></p>\n","excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo generate</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\">Deployment</a></p>\n"},{"title":"增加相册","date":"2016-08-03T07:41:32.000Z","_content":"\n我们分析一下，想要获取相册图片，首先得拿到图片得线上地址，其次，我们可以想到，既然我们的博客内容都放在了github得服务器，那么图片又何尝不能呢？\n\n使用hexo搭建博客的同学都知道，github上会建立一个名为username.github.io的仓库，而且仓库只存储了整个项目的一部分（source文件夹的内容），而且貌似这个仓库有大小限制，总之就是说不能把图片放在这个仓库里。\n\n我们再考虑另一个问题，假如我们有一天需要在另一台电脑写博客怎么办？所以博客备份就是需要的了。那么好，我们在Github 上再建一个仓库，用来存储整个博客项目的文件，假如某一天换个环境，直接全部down下来，就能拿到所有文章的源文件了，所以正好，我们可以在根目录下新建一个photos文件夹用来存放相册需要展示的图片文件了。\n\nok，分析结束，敲定技术方案：\n我们新建文件夹photos用来存放图片文件，然后新建一个基于nodejs的js文件用来读取所有图片再生成一个json接口文件供相册页面的js文件使用。\n\n### 存放照片\n在博客的根目录下创建一个photos的文件夹，里面存放你想要展示的照片文件。然后把整个项目部署到github上，才能访问到图片的线上地址。\n\n### 生成json文件\n在根目录下创建一个nodejs文件tool.js，内容如下：\n```\n\"use strict\";\nvar fs = require(\"fs\");\nvar path = \"./photos/\";\nfs.readdir(path, function (err, files) {\n    if (err) {\n        return;\n    }\n    var arr = [];\n    (function iterator(index) {\n        if (index == files.length) {\n            fs.writeFile(\"./source/photos/data.json\", JSON.stringify(arr, null, \"\\t\"));\n            console.log('get img success!');\n            return;\n        }\n        fs.stat(path + files[index], function (err, stats) {\n            if (err) {\n                return;\n            }\n            if (stats.isFile()) {\n                arr.push(files[index]);\n            }\n            iterator(index + 1);\n        })\n    }(0));\n});\n```\n运行这个文件node tool.js，运行之后，会在/source/photos/目录下创建一个data.json文件，内容如下：\n```\n[\n    \"IMG_0011.JPG\",\n    \"IMG_0019.JPG\",\n    \"IMG_0020.JPG\",\n    \"IMG_0022.JPG\",\n    \"IMG_0045.JPG\",\n    \"IMG_0099.JPG\",\n    \"IMG_0106.JPG\",\n    \"IMG_0191.JPG\",\n    \"IMG_0306.JPG\",\n    \"IMG_0438.JPG\",\n    \"IMG_0451.JPG\",\n    \"IMG_0648.JPG\",\n    \"IMG_0670.JPG\",\n    \"IMG_0842.JPG\",\n    \"IMG_1078.JPG\",\n    \"IMG_1239.JPG\",\n    \"IMG_1429.JPG\",\n    \"IMG_1634.JPG\"\n]\n```\n每次修改photos文件夹里的照片，都得运行一下这个js文件，以更新生成的data.json文件。\n\n创建相册页面\n在根目录下执行命令：\n\nhexo page photos\n会在source/photos目录下生成一个index.md文件，编辑文件内容如下：\n```\n<link type=\"text/css\" href=\"/fancybox/jquery.fancybox.css\" rel=\"stylesheet\">\n<div class=\"instagram\">\n    <section class=\"archives album\">\n        <ul class=\"img-box-ul\"></ul>\n    </section>\n</div>\n```\n修改themes/yilia/js/photo.js：\n```\n   define([], function () {\n        return {\n            page: 1,\n            offset: 20,\n            init: function () {\n                var that = this;\n                $.getJSON(\"/photo/output.json\", function (data) {\n                    that.render(that.page, data);\n\n                    that.scroll(data);\n                });\n            },\n\n            render: function (page, data) {\n                var begin = (page - 1) * this.offset;\n                var end = page * this.offset;\n                if (begin >= data.length) return;\n                var html, li = \"\";\n                for (var i = begin; i < end && i < data.length; i++) {\n                    li += '<li><div class=\"img-box\">' +\n                        '<a class=\"img-bg\" rel=\"example_group\" href=\"https://github.com/xiaohang96/blog/blob/master/photos/' + data[i] + '?raw=true\"></a>' +\n                        '<img lazy-src=\"https://github.com/xiaohang96/blog/blob/master/photos/' + data[i] + '?raw=true\" />' +\n                        '</li>';\n                }\n\n                $(\".img-box-ul\").append(li);\n                $(\".img-box-ul\").lazyload();\n                $(\"a[rel=example_group]\").fancybox();\n            },\n\n            scroll: function (data) {\n                var that = this;\n                $(window).scroll(function() {\n                    var windowPageYOffset = window.pageYOffset;\n                    var windowPageYOffsetAddHeight = windowPageYOffset + window.innerHeight;\n                    var sensitivity = 0;\n\n                    var offsetTop = $(\".instagram\").offset().top + $(\".instagram\").height();\n\n                    if (offsetTop >= windowPageYOffset && offsetTop < windowPageYOffsetAddHeight + sensitivity) {\n                        that.render(++that.page, data);\n                    }\n                })\n            }\n        }\n    })\n```\n上述文件读取json文件，将图片的线上url拼接起来渲染在页面上，相册样式使用yilia主题提供。然后上传这些文件，根据自定义的路径访问url，就能看到相册了。那么，到这里就基本完成了相册的制作。","source":"_posts/增加相册.md","raw":"---\ntitle: 增加相册\ndate: 2016-08-03 15:41:32\ntags: 教程\n---\n\n我们分析一下，想要获取相册图片，首先得拿到图片得线上地址，其次，我们可以想到，既然我们的博客内容都放在了github得服务器，那么图片又何尝不能呢？\n\n使用hexo搭建博客的同学都知道，github上会建立一个名为username.github.io的仓库，而且仓库只存储了整个项目的一部分（source文件夹的内容），而且貌似这个仓库有大小限制，总之就是说不能把图片放在这个仓库里。\n\n我们再考虑另一个问题，假如我们有一天需要在另一台电脑写博客怎么办？所以博客备份就是需要的了。那么好，我们在Github 上再建一个仓库，用来存储整个博客项目的文件，假如某一天换个环境，直接全部down下来，就能拿到所有文章的源文件了，所以正好，我们可以在根目录下新建一个photos文件夹用来存放相册需要展示的图片文件了。\n\nok，分析结束，敲定技术方案：\n我们新建文件夹photos用来存放图片文件，然后新建一个基于nodejs的js文件用来读取所有图片再生成一个json接口文件供相册页面的js文件使用。\n\n### 存放照片\n在博客的根目录下创建一个photos的文件夹，里面存放你想要展示的照片文件。然后把整个项目部署到github上，才能访问到图片的线上地址。\n\n### 生成json文件\n在根目录下创建一个nodejs文件tool.js，内容如下：\n```\n\"use strict\";\nvar fs = require(\"fs\");\nvar path = \"./photos/\";\nfs.readdir(path, function (err, files) {\n    if (err) {\n        return;\n    }\n    var arr = [];\n    (function iterator(index) {\n        if (index == files.length) {\n            fs.writeFile(\"./source/photos/data.json\", JSON.stringify(arr, null, \"\\t\"));\n            console.log('get img success!');\n            return;\n        }\n        fs.stat(path + files[index], function (err, stats) {\n            if (err) {\n                return;\n            }\n            if (stats.isFile()) {\n                arr.push(files[index]);\n            }\n            iterator(index + 1);\n        })\n    }(0));\n});\n```\n运行这个文件node tool.js，运行之后，会在/source/photos/目录下创建一个data.json文件，内容如下：\n```\n[\n    \"IMG_0011.JPG\",\n    \"IMG_0019.JPG\",\n    \"IMG_0020.JPG\",\n    \"IMG_0022.JPG\",\n    \"IMG_0045.JPG\",\n    \"IMG_0099.JPG\",\n    \"IMG_0106.JPG\",\n    \"IMG_0191.JPG\",\n    \"IMG_0306.JPG\",\n    \"IMG_0438.JPG\",\n    \"IMG_0451.JPG\",\n    \"IMG_0648.JPG\",\n    \"IMG_0670.JPG\",\n    \"IMG_0842.JPG\",\n    \"IMG_1078.JPG\",\n    \"IMG_1239.JPG\",\n    \"IMG_1429.JPG\",\n    \"IMG_1634.JPG\"\n]\n```\n每次修改photos文件夹里的照片，都得运行一下这个js文件，以更新生成的data.json文件。\n\n创建相册页面\n在根目录下执行命令：\n\nhexo page photos\n会在source/photos目录下生成一个index.md文件，编辑文件内容如下：\n```\n<link type=\"text/css\" href=\"/fancybox/jquery.fancybox.css\" rel=\"stylesheet\">\n<div class=\"instagram\">\n    <section class=\"archives album\">\n        <ul class=\"img-box-ul\"></ul>\n    </section>\n</div>\n```\n修改themes/yilia/js/photo.js：\n```\n   define([], function () {\n        return {\n            page: 1,\n            offset: 20,\n            init: function () {\n                var that = this;\n                $.getJSON(\"/photo/output.json\", function (data) {\n                    that.render(that.page, data);\n\n                    that.scroll(data);\n                });\n            },\n\n            render: function (page, data) {\n                var begin = (page - 1) * this.offset;\n                var end = page * this.offset;\n                if (begin >= data.length) return;\n                var html, li = \"\";\n                for (var i = begin; i < end && i < data.length; i++) {\n                    li += '<li><div class=\"img-box\">' +\n                        '<a class=\"img-bg\" rel=\"example_group\" href=\"https://github.com/xiaohang96/blog/blob/master/photos/' + data[i] + '?raw=true\"></a>' +\n                        '<img lazy-src=\"https://github.com/xiaohang96/blog/blob/master/photos/' + data[i] + '?raw=true\" />' +\n                        '</li>';\n                }\n\n                $(\".img-box-ul\").append(li);\n                $(\".img-box-ul\").lazyload();\n                $(\"a[rel=example_group]\").fancybox();\n            },\n\n            scroll: function (data) {\n                var that = this;\n                $(window).scroll(function() {\n                    var windowPageYOffset = window.pageYOffset;\n                    var windowPageYOffsetAddHeight = windowPageYOffset + window.innerHeight;\n                    var sensitivity = 0;\n\n                    var offsetTop = $(\".instagram\").offset().top + $(\".instagram\").height();\n\n                    if (offsetTop >= windowPageYOffset && offsetTop < windowPageYOffsetAddHeight + sensitivity) {\n                        that.render(++that.page, data);\n                    }\n                })\n            }\n        }\n    })\n```\n上述文件读取json文件，将图片的线上url拼接起来渲染在页面上，相册样式使用yilia主题提供。然后上传这些文件，根据自定义的路径访问url，就能看到相册了。那么，到这里就基本完成了相册的制作。","slug":"增加相册","published":1,"updated":"2016-08-03T07:52:35.416Z","_id":"cirelaq820007lgu6uh07rg46","comments":1,"layout":"post","photos":[],"link":"","content":"<p>我们分析一下，想要获取相册图片，首先得拿到图片得线上地址，其次，我们可以想到，既然我们的博客内容都放在了github得服务器，那么图片又何尝不能呢？</p>\n<p>使用hexo搭建博客的同学都知道，github上会建立一个名为username.github.io的仓库，而且仓库只存储了整个项目的一部分（source文件夹的内容），而且貌似这个仓库有大小限制，总之就是说不能把图片放在这个仓库里。</p>\n<p>我们再考虑另一个问题，假如我们有一天需要在另一台电脑写博客怎么办？所以博客备份就是需要的了。那么好，我们在Github 上再建一个仓库，用来存储整个博客项目的文件，假如某一天换个环境，直接全部down下来，就能拿到所有文章的源文件了，所以正好，我们可以在根目录下新建一个photos文件夹用来存放相册需要展示的图片文件了。</p>\n<p>ok，分析结束，敲定技术方案：<br>我们新建文件夹photos用来存放图片文件，然后新建一个基于nodejs的js文件用来读取所有图片再生成一个json接口文件供相册页面的js文件使用。</p>\n<h3 id=\"存放照片\"><a href=\"#存放照片\" class=\"headerlink\" title=\"存放照片\"></a>存放照片</h3><p>在博客的根目录下创建一个photos的文件夹，里面存放你想要展示的照片文件。然后把整个项目部署到github上，才能访问到图片的线上地址。</p>\n<h3 id=\"生成json文件\"><a href=\"#生成json文件\" class=\"headerlink\" title=\"生成json文件\"></a>生成json文件</h3><p>在根目录下创建一个nodejs文件tool.js，内容如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div></pre></td><td class=\"code\"><pre><div class=\"line\">&quot;use strict&quot;;</div><div class=\"line\">var fs = require(&quot;fs&quot;);</div><div class=\"line\">var path = &quot;./photos/&quot;;</div><div class=\"line\">fs.readdir(path, function (err, files) &#123;</div><div class=\"line\">    if (err) &#123;</div><div class=\"line\">        return;</div><div class=\"line\">    &#125;</div><div class=\"line\">    var arr = [];</div><div class=\"line\">    (function iterator(index) &#123;</div><div class=\"line\">        if (index == files.length) &#123;</div><div class=\"line\">            fs.writeFile(&quot;./source/photos/data.json&quot;, JSON.stringify(arr, null, &quot;\\t&quot;));</div><div class=\"line\">            console.log(&apos;get img success!&apos;);</div><div class=\"line\">            return;</div><div class=\"line\">        &#125;</div><div class=\"line\">        fs.stat(path + files[index], function (err, stats) &#123;</div><div class=\"line\">            if (err) &#123;</div><div class=\"line\">                return;</div><div class=\"line\">            &#125;</div><div class=\"line\">            if (stats.isFile()) &#123;</div><div class=\"line\">                arr.push(files[index]);</div><div class=\"line\">            &#125;</div><div class=\"line\">            iterator(index + 1);</div><div class=\"line\">        &#125;)</div><div class=\"line\">    &#125;(0));</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure></p>\n<p>运行这个文件node tool.js，运行之后，会在/source/photos/目录下创建一个data.json文件，内容如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\">[</div><div class=\"line\">    &quot;IMG_0011.JPG&quot;,</div><div class=\"line\">    &quot;IMG_0019.JPG&quot;,</div><div class=\"line\">    &quot;IMG_0020.JPG&quot;,</div><div class=\"line\">    &quot;IMG_0022.JPG&quot;,</div><div class=\"line\">    &quot;IMG_0045.JPG&quot;,</div><div class=\"line\">    &quot;IMG_0099.JPG&quot;,</div><div class=\"line\">    &quot;IMG_0106.JPG&quot;,</div><div class=\"line\">    &quot;IMG_0191.JPG&quot;,</div><div class=\"line\">    &quot;IMG_0306.JPG&quot;,</div><div class=\"line\">    &quot;IMG_0438.JPG&quot;,</div><div class=\"line\">    &quot;IMG_0451.JPG&quot;,</div><div class=\"line\">    &quot;IMG_0648.JPG&quot;,</div><div class=\"line\">    &quot;IMG_0670.JPG&quot;,</div><div class=\"line\">    &quot;IMG_0842.JPG&quot;,</div><div class=\"line\">    &quot;IMG_1078.JPG&quot;,</div><div class=\"line\">    &quot;IMG_1239.JPG&quot;,</div><div class=\"line\">    &quot;IMG_1429.JPG&quot;,</div><div class=\"line\">    &quot;IMG_1634.JPG&quot;</div><div class=\"line\">]</div></pre></td></tr></table></figure></p>\n<p>每次修改photos文件夹里的照片，都得运行一下这个js文件，以更新生成的data.json文件。</p>\n<p>创建相册页面<br>在根目录下执行命令：</p>\n<p>hexo page photos<br>会在source/photos目录下生成一个index.md文件，编辑文件内容如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;link type=&quot;text/css&quot; href=&quot;/fancybox/jquery.fancybox.css&quot; rel=&quot;stylesheet&quot;&gt;</div><div class=\"line\">&lt;div class=&quot;instagram&quot;&gt;</div><div class=\"line\">    &lt;section class=&quot;archives album&quot;&gt;</div><div class=\"line\">        &lt;ul class=&quot;img-box-ul&quot;&gt;&lt;/ul&gt;</div><div class=\"line\">    &lt;/section&gt;</div><div class=\"line\">&lt;/div&gt;</div></pre></td></tr></table></figure></p>\n<p>修改themes/yilia/js/photo.js：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div></pre></td><td class=\"code\"><pre><div class=\"line\">define([], function () &#123;</div><div class=\"line\">     return &#123;</div><div class=\"line\">         page: 1,</div><div class=\"line\">         offset: 20,</div><div class=\"line\">         init: function () &#123;</div><div class=\"line\">             var that = this;</div><div class=\"line\">             $.getJSON(&quot;/photo/output.json&quot;, function (data) &#123;</div><div class=\"line\">                 that.render(that.page, data);</div><div class=\"line\"></div><div class=\"line\">                 that.scroll(data);</div><div class=\"line\">             &#125;);</div><div class=\"line\">         &#125;,</div><div class=\"line\"></div><div class=\"line\">         render: function (page, data) &#123;</div><div class=\"line\">             var begin = (page - 1) * this.offset;</div><div class=\"line\">             var end = page * this.offset;</div><div class=\"line\">             if (begin &gt;= data.length) return;</div><div class=\"line\">             var html, li = &quot;&quot;;</div><div class=\"line\">             for (var i = begin; i &lt; end &amp;&amp; i &lt; data.length; i++) &#123;</div><div class=\"line\">                 li += &apos;&lt;li&gt;&lt;div class=&quot;img-box&quot;&gt;&apos; +</div><div class=\"line\">                     &apos;&lt;a class=&quot;img-bg&quot; rel=&quot;example_group&quot; href=&quot;https://github.com/xiaohang96/blog/blob/master/photos/&apos; + data[i] + &apos;?raw=true&quot;&gt;&lt;/a&gt;&apos; +</div><div class=\"line\">                     &apos;&lt;img lazy-src=&quot;https://github.com/xiaohang96/blog/blob/master/photos/&apos; + data[i] + &apos;?raw=true&quot; /&gt;&apos; +</div><div class=\"line\">                     &apos;&lt;/li&gt;&apos;;</div><div class=\"line\">             &#125;</div><div class=\"line\"></div><div class=\"line\">             $(&quot;.img-box-ul&quot;).append(li);</div><div class=\"line\">             $(&quot;.img-box-ul&quot;).lazyload();</div><div class=\"line\">             $(&quot;a[rel=example_group]&quot;).fancybox();</div><div class=\"line\">         &#125;,</div><div class=\"line\"></div><div class=\"line\">         scroll: function (data) &#123;</div><div class=\"line\">             var that = this;</div><div class=\"line\">             $(window).scroll(function() &#123;</div><div class=\"line\">                 var windowPageYOffset = window.pageYOffset;</div><div class=\"line\">                 var windowPageYOffsetAddHeight = windowPageYOffset + window.innerHeight;</div><div class=\"line\">                 var sensitivity = 0;</div><div class=\"line\"></div><div class=\"line\">                 var offsetTop = $(&quot;.instagram&quot;).offset().top + $(&quot;.instagram&quot;).height();</div><div class=\"line\"></div><div class=\"line\">                 if (offsetTop &gt;= windowPageYOffset &amp;&amp; offsetTop &lt; windowPageYOffsetAddHeight + sensitivity) &#123;</div><div class=\"line\">                     that.render(++that.page, data);</div><div class=\"line\">                 &#125;</div><div class=\"line\">             &#125;)</div><div class=\"line\">         &#125;</div><div class=\"line\">     &#125;</div><div class=\"line\"> &#125;)</div></pre></td></tr></table></figure></p>\n<p>上述文件读取json文件，将图片的线上url拼接起来渲染在页面上，相册样式使用yilia主题提供。然后上传这些文件，根据自定义的路径访问url，就能看到相册了。那么，到这里就基本完成了相册的制作。</p>\n","excerpt":"","more":"<p>我们分析一下，想要获取相册图片，首先得拿到图片得线上地址，其次，我们可以想到，既然我们的博客内容都放在了github得服务器，那么图片又何尝不能呢？</p>\n<p>使用hexo搭建博客的同学都知道，github上会建立一个名为username.github.io的仓库，而且仓库只存储了整个项目的一部分（source文件夹的内容），而且貌似这个仓库有大小限制，总之就是说不能把图片放在这个仓库里。</p>\n<p>我们再考虑另一个问题，假如我们有一天需要在另一台电脑写博客怎么办？所以博客备份就是需要的了。那么好，我们在Github 上再建一个仓库，用来存储整个博客项目的文件，假如某一天换个环境，直接全部down下来，就能拿到所有文章的源文件了，所以正好，我们可以在根目录下新建一个photos文件夹用来存放相册需要展示的图片文件了。</p>\n<p>ok，分析结束，敲定技术方案：<br>我们新建文件夹photos用来存放图片文件，然后新建一个基于nodejs的js文件用来读取所有图片再生成一个json接口文件供相册页面的js文件使用。</p>\n<h3 id=\"存放照片\"><a href=\"#存放照片\" class=\"headerlink\" title=\"存放照片\"></a>存放照片</h3><p>在博客的根目录下创建一个photos的文件夹，里面存放你想要展示的照片文件。然后把整个项目部署到github上，才能访问到图片的线上地址。</p>\n<h3 id=\"生成json文件\"><a href=\"#生成json文件\" class=\"headerlink\" title=\"生成json文件\"></a>生成json文件</h3><p>在根目录下创建一个nodejs文件tool.js，内容如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div></pre></td><td class=\"code\"><pre><div class=\"line\">&quot;use strict&quot;;</div><div class=\"line\">var fs = require(&quot;fs&quot;);</div><div class=\"line\">var path = &quot;./photos/&quot;;</div><div class=\"line\">fs.readdir(path, function (err, files) &#123;</div><div class=\"line\">    if (err) &#123;</div><div class=\"line\">        return;</div><div class=\"line\">    &#125;</div><div class=\"line\">    var arr = [];</div><div class=\"line\">    (function iterator(index) &#123;</div><div class=\"line\">        if (index == files.length) &#123;</div><div class=\"line\">            fs.writeFile(&quot;./source/photos/data.json&quot;, JSON.stringify(arr, null, &quot;\\t&quot;));</div><div class=\"line\">            console.log(&apos;get img success!&apos;);</div><div class=\"line\">            return;</div><div class=\"line\">        &#125;</div><div class=\"line\">        fs.stat(path + files[index], function (err, stats) &#123;</div><div class=\"line\">            if (err) &#123;</div><div class=\"line\">                return;</div><div class=\"line\">            &#125;</div><div class=\"line\">            if (stats.isFile()) &#123;</div><div class=\"line\">                arr.push(files[index]);</div><div class=\"line\">            &#125;</div><div class=\"line\">            iterator(index + 1);</div><div class=\"line\">        &#125;)</div><div class=\"line\">    &#125;(0));</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure></p>\n<p>运行这个文件node tool.js，运行之后，会在/source/photos/目录下创建一个data.json文件，内容如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\">[</div><div class=\"line\">    &quot;IMG_0011.JPG&quot;,</div><div class=\"line\">    &quot;IMG_0019.JPG&quot;,</div><div class=\"line\">    &quot;IMG_0020.JPG&quot;,</div><div class=\"line\">    &quot;IMG_0022.JPG&quot;,</div><div class=\"line\">    &quot;IMG_0045.JPG&quot;,</div><div class=\"line\">    &quot;IMG_0099.JPG&quot;,</div><div class=\"line\">    &quot;IMG_0106.JPG&quot;,</div><div class=\"line\">    &quot;IMG_0191.JPG&quot;,</div><div class=\"line\">    &quot;IMG_0306.JPG&quot;,</div><div class=\"line\">    &quot;IMG_0438.JPG&quot;,</div><div class=\"line\">    &quot;IMG_0451.JPG&quot;,</div><div class=\"line\">    &quot;IMG_0648.JPG&quot;,</div><div class=\"line\">    &quot;IMG_0670.JPG&quot;,</div><div class=\"line\">    &quot;IMG_0842.JPG&quot;,</div><div class=\"line\">    &quot;IMG_1078.JPG&quot;,</div><div class=\"line\">    &quot;IMG_1239.JPG&quot;,</div><div class=\"line\">    &quot;IMG_1429.JPG&quot;,</div><div class=\"line\">    &quot;IMG_1634.JPG&quot;</div><div class=\"line\">]</div></pre></td></tr></table></figure></p>\n<p>每次修改photos文件夹里的照片，都得运行一下这个js文件，以更新生成的data.json文件。</p>\n<p>创建相册页面<br>在根目录下执行命令：</p>\n<p>hexo page photos<br>会在source/photos目录下生成一个index.md文件，编辑文件内容如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;link type=&quot;text/css&quot; href=&quot;/fancybox/jquery.fancybox.css&quot; rel=&quot;stylesheet&quot;&gt;</div><div class=\"line\">&lt;div class=&quot;instagram&quot;&gt;</div><div class=\"line\">    &lt;section class=&quot;archives album&quot;&gt;</div><div class=\"line\">        &lt;ul class=&quot;img-box-ul&quot;&gt;&lt;/ul&gt;</div><div class=\"line\">    &lt;/section&gt;</div><div class=\"line\">&lt;/div&gt;</div></pre></td></tr></table></figure></p>\n<p>修改themes/yilia/js/photo.js：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div></pre></td><td class=\"code\"><pre><div class=\"line\">define([], function () &#123;</div><div class=\"line\">     return &#123;</div><div class=\"line\">         page: 1,</div><div class=\"line\">         offset: 20,</div><div class=\"line\">         init: function () &#123;</div><div class=\"line\">             var that = this;</div><div class=\"line\">             $.getJSON(&quot;/photo/output.json&quot;, function (data) &#123;</div><div class=\"line\">                 that.render(that.page, data);</div><div class=\"line\"></div><div class=\"line\">                 that.scroll(data);</div><div class=\"line\">             &#125;);</div><div class=\"line\">         &#125;,</div><div class=\"line\"></div><div class=\"line\">         render: function (page, data) &#123;</div><div class=\"line\">             var begin = (page - 1) * this.offset;</div><div class=\"line\">             var end = page * this.offset;</div><div class=\"line\">             if (begin &gt;= data.length) return;</div><div class=\"line\">             var html, li = &quot;&quot;;</div><div class=\"line\">             for (var i = begin; i &lt; end &amp;&amp; i &lt; data.length; i++) &#123;</div><div class=\"line\">                 li += &apos;&lt;li&gt;&lt;div class=&quot;img-box&quot;&gt;&apos; +</div><div class=\"line\">                     &apos;&lt;a class=&quot;img-bg&quot; rel=&quot;example_group&quot; href=&quot;https://github.com/xiaohang96/blog/blob/master/photos/&apos; + data[i] + &apos;?raw=true&quot;&gt;&lt;/a&gt;&apos; +</div><div class=\"line\">                     &apos;&lt;img lazy-src=&quot;https://github.com/xiaohang96/blog/blob/master/photos/&apos; + data[i] + &apos;?raw=true&quot; /&gt;&apos; +</div><div class=\"line\">                     &apos;&lt;/li&gt;&apos;;</div><div class=\"line\">             &#125;</div><div class=\"line\"></div><div class=\"line\">             $(&quot;.img-box-ul&quot;).append(li);</div><div class=\"line\">             $(&quot;.img-box-ul&quot;).lazyload();</div><div class=\"line\">             $(&quot;a[rel=example_group]&quot;).fancybox();</div><div class=\"line\">         &#125;,</div><div class=\"line\"></div><div class=\"line\">         scroll: function (data) &#123;</div><div class=\"line\">             var that = this;</div><div class=\"line\">             $(window).scroll(function() &#123;</div><div class=\"line\">                 var windowPageYOffset = window.pageYOffset;</div><div class=\"line\">                 var windowPageYOffsetAddHeight = windowPageYOffset + window.innerHeight;</div><div class=\"line\">                 var sensitivity = 0;</div><div class=\"line\"></div><div class=\"line\">                 var offsetTop = $(&quot;.instagram&quot;).offset().top + $(&quot;.instagram&quot;).height();</div><div class=\"line\"></div><div class=\"line\">                 if (offsetTop &gt;= windowPageYOffset &amp;&amp; offsetTop &lt; windowPageYOffsetAddHeight + sensitivity) &#123;</div><div class=\"line\">                     that.render(++that.page, data);</div><div class=\"line\">                 &#125;</div><div class=\"line\">             &#125;)</div><div class=\"line\">         &#125;</div><div class=\"line\">     &#125;</div><div class=\"line\"> &#125;)</div></pre></td></tr></table></figure></p>\n<p>上述文件读取json文件，将图片的线上url拼接起来渲染在页面上，相册样式使用yilia主题提供。然后上传这些文件，根据自定义的路径访问url，就能看到相册了。那么，到这里就基本完成了相册的制作。</p>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cirelaq7g0001lgu66z5y433y","tag_id":"cirelaq7w0005lgu67tj0k3bt","_id":"cirelaq8a0009lgu6y5xxwg5p"},{"post_id":"cirelaq7q0003lgu6t28g1dvp","tag_id":"cirelaq890008lgu6odqw8cl4","_id":"cirelaq8d000blgu677odqhvt"},{"post_id":"cirelaq820007lgu6uh07rg46","tag_id":"cirelaq890008lgu6odqw8cl4","_id":"cirelaq8e000clgu69utrbzs4"}],"Tag":[{"name":"日记","_id":"cirelaq7w0005lgu67tj0k3bt"},{"name":"教程","_id":"cirelaq890008lgu6odqw8cl4"}]}}